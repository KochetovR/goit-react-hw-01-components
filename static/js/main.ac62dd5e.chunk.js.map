{"version":3,"sources":["components/Profile/Profile.module.css","components/Transaction-history/Transactions.module.css","components/Statistics-section/Statistics.module.css","components/Friend-list/Friend.module.css","components/Profile/defaultImg.jpg","components/Profile/Profile-card.js","components/Profile/Profile.js","components/Statistics-section/Statistic-section.js","components/Statistics-section/Statistics.js","components/Friend-list/Friend-card.js","components/Friend-list/Friend-list.js","components/Transaction-history/TransactionsSection.js","components/Transaction-history/Transactions.js","App.js","index.js"],"names":["module","exports","ProfileCard","name","tag","location","avatar","followers","views","likes","className","styles","profile","description","src","alt","stats","label","quantity","defaultProps","defaultImg","FriendList","users","list","map","card","StatisticSection","percentage","randomColor","r","Math","floor","random","g","b","Statistics","title","statistics","statList","id","item","style","backgroundColor","FriendCard","isOnline","statusClass","status","push","true","join","width","friendList","TransactionsSection","type","amount","currency","cell","Transactions","transactions","container","table","head","row","App","Profile","friendData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac62dd5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Profile_list__3Puhs\",\"card\":\"Profile_card__1ZC4J\",\"profile\":\"Profile_profile__VnedW\",\"description\":\"Profile_description__3CM6d\",\"avatar\":\"Profile_avatar__3qS1C\",\"name\":\"Profile_name__3lNdD\",\"tag\":\"Profile_tag__ydzc4\",\"location\":\"Profile_location__3EJjv\",\"stats\":\"Profile_stats__1iQWe\",\"label\":\"Profile_label__35CS9\",\"quantity\":\"Profile_quantity__1ySTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Transactions_container__1V7pi\",\"table\":\"Transactions_table__1Stmm\",\"head\":\"Transactions_head__2nN6g\",\"title\":\"Transactions_title__N9M5d\",\"row\":\"Transactions_row__3Kr1h\",\"cell\":\"Transactions_cell__1jkJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3bYl2\",\"title\":\"Statistics_title__2Te6V\",\"statList\":\"Statistics_statList__1QNXc\",\"item\":\"Statistics_item__1wWjE\",\"label\":\"Statistics_label__30Tyf\",\"percentage\":\"Statistics_percentage__2oFzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friend_friendList__3Qen9\",\"item\":\"Friend_item__7Wr5E\",\"status\":\"Friend_status__2RNEa\",\"true\":\"Friend_true__3fZwJ\",\"avatar\":\"Friend_avatar__6hwhr\",\"name\":\"Friend_name__EtRQp\"};","export default __webpack_public_path__ + \"static/media/defaultImg.2fda6558.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport defaultImg from './defaultImg.jpg';\r\nimport styles from'./Profile.module.css';\r\n\r\nconst ProfileCard = ({name, tag, location, avatar, followers, views, likes}) =>  (\r\n    <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>@{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n            <li>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className={styles.quantity}>{followers}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Views</span>\r\n                <span className={styles.quantity}>{views}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className={styles.quantity}>{likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n);\r\n\r\nProfileCard.defaultProps = {\r\n    avatar: defaultImg,\r\n};\r\n\r\nProfileCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n};\r\n\r\n export default ProfileCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Profile from './Profile-card';\r\nimport styles from'./Profile.module.css';\r\n\r\nconst FriendList = ({users}) => \r\n    (\r\n        <ul className={styles.list}>\r\n            {users.map(({name, tag, location, avatar, stats: {followers, views, likes}}) => (\r\n                <li key={tag} className={styles.card}>\r\n                    <Profile \r\n                        name={name}\r\n                        tag={tag}\r\n                        location={location}\r\n                        avatar={avatar}\r\n                        followers={followers}\r\n                        views={views}\r\n                        likes={likes}\r\n                    />\r\n                </li>\r\n            ))}  \r\n        </ul>\r\n    );\r\n// Проверяю тип tag, т.к. использую его для ключей\r\n    FriendList.propTypes = {\r\n        users: PropTypes.arrayOf(\r\n            PropTypes.shape({  \r\n                tavatar: PropTypes.string,\r\n                name: PropTypes.string.isRequired,\r\n                tag: PropTypes.string.isRequired,\r\n                location: PropTypes.string.isRequired,\r\n                followers: PropTypes.number,\r\n                views: PropTypes.number,\r\n                likes: PropTypes.number,   \r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst StatisticSection = ({label, percentage}) => (\r\n    <>\r\n        <span className={styles.label}>{label}</span>\r\n        <span className={styles.percentage}>{percentage}%</span>\r\n    </>\r\n)\r\n\r\nStatisticSection.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticSection;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport StatisticSection from './Statistic-section';\r\nimport styles from './Statistics.module.css'\r\n\r\n\r\nfunction randomColor () {\r\n    const r = Math.floor(Math.random() * (256));\r\n    const g = Math.floor(Math.random() * (256));\r\n    const b = Math.floor(Math.random() * (256));\r\n\r\n    const color = `(${r},${g},${b})`;\r\n    return color;\r\n}\r\n\r\n\r\n    \r\nconst Statistics = ({title, stats}) => (\r\n    <section className={styles.statistics}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n\r\n        <ul className={styles.statList}>\r\n        {\r\n            stats.map(({id, label, percentage}) => (\r\n                <li key={id} className={styles.item} style={{\r\n                    backgroundColor: `rgb${randomColor()}`,\r\n                }}>\r\n                    <StatisticSection \r\n                        label={label}\r\n                        percentage={percentage}\r\n                    />\r\n                </li>\r\n            ))\r\n        }\r\n        </ul>\r\n    </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n    title: null,\r\n};\r\n\r\nStatistics.propTypes = {\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        title:PropTypes.string,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport defaultImg from '../Profile/defaultImg.jpg';\r\nimport styles from './Friend.module.css';\r\n\r\nconst FriendCard = ({isOnline, name, avatar}) => {\r\n    const statusClass = [styles.status];\r\n    if (isOnline) {\r\n        statusClass.push(styles.true)\r\n    }\r\n    return (\r\n        <>\r\n            <span className={statusClass.join(' ')} ></span>\r\n            <img className={styles.avatar} src={avatar} alt={name} width=\"100\" />\r\n            <p className={styles.name}>{name}</p>\r\n        </>\r\n    )\r\n}\r\n     \r\n\r\n\r\nFriendCard.defaultProps = {\r\n    avatar: defaultImg,\r\n};\r\n\r\nFriendCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.oneOf([true, false]),\r\n};\r\n\r\nexport default FriendCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FriendCard from './Friend-card';\r\nimport styles from './Friend.module.css';\r\n\r\nconst FriendList = ({list}) => (\r\n    <ul className={styles.friendList}>\r\n        {\r\n            list.map(({avatar, name, id, isOnline}) => (\r\n                <li key={id} className={styles.item}>\r\n                    <FriendCard \r\n                    avatar={avatar}\r\n                    name={name}\r\n                    isOnline={isOnline}\r\n                    id={id}\r\n                    />\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n)\r\n\r\nFriendList.propTypes = {\r\n    list: PropTypes.arrayOf(PropTypes.shape({\r\n        avatar: PropTypes.string,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.oneOf([true, false]),\r\n        id: PropTypes.number,\r\n    }))\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Transactions.module.css';\r\n\r\nexport const TransactionsSection = ({type, amount, currency}) => (\r\n    <>  \r\n        <td className={styles.cell}>{type}</td>\r\n        <td className={styles.cell}>{amount}</td>\r\n        <td className={styles.cell}>{currency}</td>\r\n    </>             \r\n)\r\n\r\nTransactionsSection.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {TransactionsSection} from './TransactionsSection';\r\nimport styles from './Transactions.module.css';\r\n\r\nexport const Transactions = ({transactions}) => (\r\n    <div className={styles.container}>\r\n        <table className={styles.table}>\r\n                    <thead className={styles.head}>\r\n                        <tr>\r\n                            <th className={styles.title}>Type</th>\r\n                            <th className={styles.title}>Amount</th>\r\n                            <th className={styles.title}>Currency</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            transactions.map(({id, type, amount, currency}) =>(\r\n                                <tr key={id} className={styles.row}>\r\n                                    <TransactionsSection \r\n                                    type={type}\r\n                                    amount={amount}\r\n                                    currency={currency}\r\n                                    id={id}\r\n                                    />\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        \r\n    </div>\r\n)\r\n\r\nTransactions.propTypes = {\r\n    transactions: PropTypes.arrayOf(PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n        id: PropTypes.string,\r\n    }))\r\n};\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport Profile from './components/Profile/Profile';\r\nimport StatisticSection from './components/Statistics-section/Statistics';\r\nimport FriendList from './components/Friend-list/Friend-list';\r\nimport {Transactions} from './components/Transaction-history/Transactions';\r\n\r\nimport users from './data/users.json';\r\nimport stats from './data/statistics.json';\r\nimport friendData from './data/friend-list.json';\r\nimport transactions from './data/transactions.json';\r\n\r\n\r\n\r\nconst App = () => (\r\n    <div>\r\n        <Profile users={users}/>\r\n        <StatisticSection \r\n        stats={stats} title='Upload stats'/>\r\n        <FriendList list={friendData}/>\r\n        <Transactions transactions={transactions}/>\r\n    </div>\r\n );\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css'\n\n// import PropTypes from 'prop-types';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n\n\n\n\n\n\n"],"sourceRoot":""}